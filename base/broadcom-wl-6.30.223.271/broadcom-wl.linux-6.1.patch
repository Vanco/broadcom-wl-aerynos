diff -rup broadcom-wl-6.30.223.271.orig/src/wl/sys/wl_cfg80211_hybrid.c broadcom-wl-6.30.223.271/src/wl/sys/wl_cfg80211_hybrid.c
--- broadcom-wl-6.30.223.271.orig/src/wl/sys/wl_cfg80211_hybrid.c	2022-11-09 12:47:11.622248603 +0100
+++ broadcom-wl-6.30.223.271/src/wl/sys/wl_cfg80211_hybrid.c	2022-11-09 12:54:04.358042245 +0100
@@ -98,20 +98,26 @@ static s32 wl_cfg80211_get_tx_power(stru
 static s32 wl_cfg80211_get_tx_power(struct wiphy *wiphy, s32 *dbm);
 #endif
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0)
+#define MAYBE_INT_LINK_ID int link_id,
+#else
+#define MAYBE_INT_LINK_ID
+#endif
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 38)
 static s32 wl_cfg80211_config_default_key(struct wiphy *wiphy,
-           struct net_device *dev, u8 key_idx, bool unicast, bool multicast);
+           struct net_device *dev, MAYBE_INT_LINK_ID u8 key_idx, bool unicast, bool multicast);
 #else
 static s32 wl_cfg80211_config_default_key(struct wiphy *wiphy,
            struct net_device *dev, u8 key_idx);
 #endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 37)
 static s32 wl_cfg80211_add_key(struct wiphy *wiphy, struct net_device *dev,
-           u8 key_idx, bool pairwise, const u8 *mac_addr, struct key_params *params);
+           MAYBE_INT_LINK_ID u8 key_idx, bool pairwise, const u8 *mac_addr, struct key_params *params);
 static s32 wl_cfg80211_del_key(struct wiphy *wiphy, struct net_device *dev,
-           u8 key_idx, bool pairwise, const u8 *mac_addr);
+           MAYBE_INT_LINK_ID u8 key_idx, bool pairwise, const u8 *mac_addr);
 static s32 wl_cfg80211_get_key(struct wiphy *wiphy, struct net_device *dev,
-           u8 key_idx, bool pairwise, const u8 *mac_addr,
+           MAYBE_INT_LINK_ID u8 key_idx, bool pairwise, const u8 *mac_addr,
            void *cookie, void (*callback) (void *cookie, struct key_params *params));
 #else
 static s32 wl_cfg80211_add_key(struct wiphy *wiphy, struct net_device *dev,
@@ -1160,7 +1166,7 @@ static s32 wl_cfg80211_get_tx_power(stru
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 38)
 static s32
 wl_cfg80211_config_default_key(struct wiphy *wiphy,
-	struct net_device *dev, u8 key_idx, bool unicast, bool multicast)
+	struct net_device *dev, MAYBE_INT_LINK_ID u8 key_idx, bool unicast, bool multicast)
 #else
 static s32
 wl_cfg80211_config_default_key(struct wiphy *wiphy,
@@ -1185,7 +1191,7 @@ wl_cfg80211_config_default_key(struct wi
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 37)
 static s32
 wl_cfg80211_add_key(struct wiphy *wiphy, struct net_device *dev,
-                    u8 key_idx, bool pairwise, const u8 *mac_addr, struct key_params *params)
+                    MAYBE_INT_LINK_ID u8 key_idx, bool pairwise, const u8 *mac_addr, struct key_params *params)
 #else
 static s32
 wl_cfg80211_add_key(struct wiphy *wiphy, struct net_device *dev,
@@ -1306,7 +1312,7 @@ wl_cfg80211_add_key(struct wiphy *wiphy,
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 37)
 static s32
 wl_cfg80211_del_key(struct wiphy *wiphy, struct net_device *dev,
-                    u8 key_idx, bool pairwise, const u8 *mac_addr)
+                    MAYBE_INT_LINK_ID u8 key_idx, bool pairwise, const u8 *mac_addr)
 #else
 static s32
 wl_cfg80211_del_key(struct wiphy *wiphy, struct net_device *dev,
@@ -1349,7 +1355,7 @@ wl_cfg80211_del_key(struct wiphy *wiphy,
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 37)
 static s32
 wl_cfg80211_get_key(struct wiphy *wiphy, struct net_device *dev,
-                    u8 key_idx, bool pairwise, const u8 *mac_addr, void *cookie,
+                    MAYBE_INT_LINK_ID u8 key_idx, bool pairwise, const u8 *mac_addr, void *cookie,
                     void (*callback) (void *cookie, struct key_params * params))
 #else
 static s32
